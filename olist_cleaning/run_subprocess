# run_subprocess.py

import pandas as pd  # Import pandas as pd
from deep_translator import GoogleTranslator
import subprocess
import sys
import logging

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')

def install_package(package_name):
    """
    Installs a package using pip.

    Parameters:
        package_name (str): The name of the package to install.

    Returns:
        bool: True if installation was successful, False otherwise.
    """
    try:
        logging.info(f'Attempting to install package: {package_name}')
        subprocess.check_call([sys.executable, '-m', 'pip', 'install', package_name])
        logging.info(f'Package {package_name} installed successfully.')
        return True
    except subprocess.CalledProcessError as e:
        logging.error(f'Failed to install package {package_name}. Error: {e}')
        return False

# Attempt to import deep_translator, install if not available
try:
    from deep_translator import GoogleTranslator
    logging.info('deep_translator is already installed.')
except ImportError:
    logging.warning('deep_translator not found. Attempting to install...')
    if install_package('deep_translator'):
        try:
            from deep_translator import GoogleTranslator
            logging.info('deep_translator imported successfully after installation.')
        except ImportError:
            logging.error('deep_translator could not be imported even after installation.')
            sys.exit('deep_translator is required for this script to run. Exiting.')
    else:
        sys.exit('Failed to install deep_translator. Please install it manually and retry.')

def translate_text_free(text, target_language='en'):
    """
    Translates text to the target language using GoogleTranslator.

    Parameters:
        text (str): The text to translate.
        target_language (str): The language code to translate the text into.

    Returns:
        str: The translated text or the original text if translation fails.
    """
    if pd.isna(text) or text.strip() == '':
        return text
    try:
        translated = GoogleTranslator(source='auto', target=target_language).translate(text)
        return translated
    except Exception as e:
        logging.error(f'Error translating text: {e}. Returning original text.')
        return text

# Test the translation function
if __name__ == "__main__":
    sample_text = "Este é um exemplo de texto em português."
    translated_text = translate_text_free(sample_text)
    print(f'Original Text: {sample_text}')
    print(f'Translated Text: {translated_text}')
